% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dagtex.R
\name{dagtex}
\alias{dagtex}
\title{Create a new DAG}
\usage{
dagtex(
  .node_options = NULL,
  .edge_options = NULL,
  .swig_options = NULL,
  help_lines = getOption("dagtex.help_lines"),
  help_angles = getOption("dagtex.help_angles"),
  adorn_math = getOption("dagtex.adorn_math"),
  node_distance = "1cm",
  ...
)
}
\arguments{
\item{.node_options}{List of options that apply to each node (can be
overwritten for individual nodes).}

\item{.edge_options}{List of options that apply to each edge (can be
overwritten for individual edges).}

\item{.swig_options}{List of options that apply to each SWIG node (some can be
overwritten for individual SWIG nodes).}

\item{help_lines}{Logical or numeric vector of length 2 giving the (x,y)
coordinates that will be used (along with (0,0)) to help troubleshoot node
placement. If \code{TRUE}, the upper-right coordinates will be the best guess of
what will contain the diagram. Defaults to FALSE.}

\item{help_angles}{Logical or numeric vector of angles in degrees. If \code{TRUE},
plots lines extending from each node at 0, 30, ..., 360 degrees to
troubleshoot arrow placement. If a numeric vector, lines extend at those
angles. Defaults to FALSE.}

\item{adorn_math}{Logical. If all node names should be printed in math mode,
you can avoid surrounding them all with \verb{$...$} by setting \code{adorn_math = TRUE}.}
}
\value{
DAG contents, invisibly (DAG is printed to the viewer).
}
\description{
Create a new DAG
}
\details{
For non-SWIG nodes, \code{shape} options are "rectangle", "circle", "ellipse",
"circle split", "forbidden sign", "diamond", "cross out", "strike out",
"regular polygon", "star". For SWIG nodes, the only option is "ellipse"
(although "circle" and "circle split" return the same result). If no shape is
supplied, the nodes default to being bare, and SWIG nodes are split with a
simple line. Other options regarding shapes can be passed to .node_options.

SWIG nodes take the following possible options: \code{split}, \code{shape}, \code{gap},
\verb{fill_color_\{x\}}, \verb{line_color_\{x\}}, \verb{line_width_\{x\}}, \verb{inner_line_width_\{x\}},
where \code{{x}} is \code{left}, \code{right}, \code{upper}, or \code{lower.} The \code{split} option allows
for choosing "v" (vertical) or "h" (horizontal) node splits. Only left/right
options should be specified for vertical splits, and only upper/lower for
horizontal splits; TikZ errors will otherwise result.

Line type ("solid", "dashed", etc.) is denoted with \verb{line_type = }. Arrowhead
type ("stealth", "latex", etc.) is denoted with \verb{arrowhead = }.

Color options include \verb{color = } for edges and nodes and \verb{text = } for text
color. Note that including color as a node option will also turn the SWIG
nodes that color, unless the individual line_colors are changed. Color values
can be any of: "red", "green", "blue", "cyan", "magenta", "yellow", "black",
"gray", "darkgray", "lightgray", "brown", "lime", "olive", "orange", "pink",
"purple", "teal", "violet", "white". They can be lighted or combined as with
TIkz, e.g., "red!40" or "red!30!blue!30".

Other options should be named as in Tikz code. Underscores (\verb{_}) can be used
to replace any spaces in the option names. A resource for these options is
here: (https://en.wikibooks.org/wiki/LaTeX/PGF/TikZ).

To apply a style to just the left or right side of a SWIG node, name the
option with the suffix \verb{_left}, \verb{_right}, \verb{_upper}, or \verb{_lower}, and it will
be treated like a regular TikZ style option.
}
\examples{
dagtex(
  .node_options = list(shape = "star"),
  .swig_options = list(gap = "3pt", line_color_right = "red",
                       fill_color_left = "pink", line_width_left = 2.75),
  .edge_options = list(line_type = "dashed", color = "green")
) \%>\%
  add_node("THIS IS A SWIG",
           .options = list(shape = "forbidden sign", color = "blue",
                           line_width = 4)
           ) \%>\%
  add_swig_node(.left = "$X$", .right = "$x = 1$") \%>\%
  add_node("$Y^{x = 1}$",
           .options = list(color = "violet", text = "olive")
           ) \%>\%
  add_edge("$x = 1$", "$Y^{x = 1}$",
           curve = "up", is_double_arrow = TRUE,
           .options = list(color = "teal", line_type = "solid")
           ) \%>\%
  add_edge(1, 3,
           curve_in_degree = 0, curve_out_degree = 40
           ) \%>\%
  add_node("hello", above = 2,
           .options = list(fill = "yellow"))

dagtex(.node_options = list(shape = "star", star_point_ratio = 0.8, star_points = 7)) \%>\%
   add_node("Star")

# options() can be used to set options for a session
options(dagtex.node_options = list(fill = "orange!30", shape = "rectangle"),
   dagtex.adorn_math = TRUE)
dagtex() \%>\% add_node("\\\\pi")
# The special option "dagtex.shape" sets shape for regular and swig nodes
}
